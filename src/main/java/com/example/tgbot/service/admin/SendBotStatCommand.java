package com.example.tgbot.service.admin;

import com.example.tgbot.exception.AccessDeniedException;
import com.example.tgbot.interfaces.BotActions;
import com.example.tgbot.interfaces.CommandWithChatId;
import com.example.tgbot.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.PropertySource;
import org.springframework.stereotype.Component;

@Component
@PropertySource("/application.properties")
public class SendBotStatCommand implements CommandWithChatId {

    private final UserService userService;

    private final BotActions botActions;



    @Autowired
    public SendBotStatCommand(BotActions botActions, UserService userService) {
        this.botActions = botActions;
        this.userService = userService;
    }
    @Override
    public void execute(long chatId) {
        if(!userService.getInfoAboutUserByChatID(chatId).getIsAdministrator()){
            botActions.sendMessageWithoutCallbackQuery(chatId,"–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã");
            throw new AccessDeniedException("–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã");
        }

        String answer = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ:\n\n";

        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        long totalUsers = userService.getAmountOfUsersInBot();
        answer += "üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: " + totalUsers + "\n";

        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ–≥–æ–¥–Ω—è
        long newUsersToday = userService.getAmountOfNewUsersInBotToday();
        answer += "üÜï –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–µ–≥–æ–¥–Ω—è: " + newUsersToday + "\n";

        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—á–µ—Ä–∞
        long newUsersYesterday = userService.getAmountOfNewUsersInBotYesterday();
        answer += "üìÖ –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤—á–µ—Ä–∞: " + newUsersYesterday + "\n";

        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        long usersCurrentMonth = userService.getNumberOfUsersForCurrentMonth();
        answer += "üìÜ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü: " + usersCurrentMonth + "\n";

        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü
        long usersPreviousMonth = userService.getNumberOfUsersForPreviousMonth();
        answer += "üóìÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü: " + usersPreviousMonth + "\n";

        botActions.sendMessageWithoutCallbackQuery(chatId, answer);
    }

}